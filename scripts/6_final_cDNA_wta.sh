#!/bin/bash

## ---------------------------------------

## the goal of this script is to create a final cDNA FASTA file for quantification
## this cDNA file should include all HLA typed alleles sequences and the original cDNA file

## main input:
## - cDNA file containing allele sequences generated by rule allele_fasta (referred to in this script as allele_cDNA="$1")
## - reference cDNA file generated by rule ref_cDNA_fasta (referred to in this script as genes_cDNA="$2")
## - list with gene names used to filter out existing HLA sequences (referred to in this script as gene_names="$3")
##   before adding the sequences of the HLA typed alleles into the original cDNA file, the HLA sequences already present must be removed
## - final cDNA output file used for quantification (referred to in this script as final_cDNA="$4")

## ---------------------------------------

## input data
allele_cDNA="$1"
genes_cDNA="$2"
gene_names="$3"
final_cDNA="$4"

## searches for lines in the genes_cDNA file that match the specified names in gene_names
transcripts=$(grep -E "gene_name:($gene_names)" "$genes_cDNA")

## filters the genes_cDNA file by excluding lines that match the previously extracted transcripts
filtered_cDNA=$(cat "$genes_cDNA" | grep -v "$transcripts")

## headers in the reference genome obtained from Ensembl have a specific format, such as:
## >ENST00000624431.2 gene_id:ENSG00000279928.2 gene_name:DDX11L17 transcript_name:DDX11L17-201 chr:1 start:182696 end:184174 strand:+
## the goal here is to simplify the header format to enhance the integration of HLA alleles 
## and allow for subsequent quantification processes using kallisto
## the output should now display the transcript name followed by the gene name, formatted as:
## >ENST00000624431.2 ENSG00000279928.2
filtered_cDNA_1=$(echo "$filtered_cDNA" | awk '/^>/ {sub(/ gene_name.*/, ""); sub(/ gene_id:/, " "); print $0} /^[^>]/ {print}')

## headers in the HLA cDNA file obtained have a specific format
## similarly, the goal here is to simplify the header format in the HLA cDNA file
## so that it is displayed as transcript name followed by gene name
## from: >HLA:HLA00005 A*02:01:01:01 3517 bp
## to: >HLA00005 A*02:01:01:01
allele_cDNA_1=$(cat "$allele_cDNA" | sed -e 's/^>HLA:HLA\(.*\) \(.*\) \([0-9]* bp\)/>HLA\1 \2/')

cDNA="$filtered_cDNA_1
$allele_cDNA_1"

echo "$cDNA" > "$final_cDNA"